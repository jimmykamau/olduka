version: '3.7'

services:
  db:
    restart: unless-stopped
    image: postgres:latest
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data/
    networks:
      - backend
  
  mongodb:
    restart: always
    image: mongo:latest
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
    ports:
      - "27017:27017"
    volumes:
      - mongodata:/data/db
    networks:
      - backend
  
  redis:
    restart: unless-stopped
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
    networks:
      - backend
      - frontend
  
  api:
    restart: always
    env_file:
      - ./api/api.env
    expose:
      - "8000"
    depends_on:
      - db
      - mongodb
    volumes:
      - ./api:/usr/src/api
      - static-volume:/usr/src/api/static
    networks: 
      - backend
      - frontend
  
  celery:
    restart: always
    build:
      context: ./api
      dockerfile: DOCKERFILE-CELERY
    env_file:
      - ./api/api.env
    volumes:
      - ./api:/usr/src/api
    depends_on:
      - redis
      - api
    networks: 
      - backend
    command: >
      sh -c "celery -A olduka worker -l info"
  
  front_end:
    restart: on-failure
    networks:
      - frontend
      - backend
  
  nginx:
    restart: always
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - api
      - front_end
    volumes:
      - static-volume:/usr/src/api/static
    networks: 
      - frontend

volumes:
  static-volume:
  pgdata:
  mongodata:
  redisdata:
  front-end:

networks: 
  backend:
  frontend:
